#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö
# –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è

set -e

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–∏—Å
check_service() {
    local service=$1
    if systemctl is-active --quiet $service; then
        echo "‚úÖ $service –∑–∞–ø—É—â–µ–Ω"
        return 0
    else
        echo "‚ùå $service –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 1
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL
setup_postgresql() {
    echo "üêò –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL..."
    
    if check_service postgresql; then
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
        sudo -u postgres psql -c "
            DO \$\$
            BEGIN
                IF NOT EXISTS (SELECT FROM pg_user WHERE usename = 'backup_user') THEN
                    CREATE USER backup_user WITH PASSWORD 'backup_password';
                END IF;
            END
            \$\$;
        " 2>/dev/null || echo "‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å backup_user —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        
        # –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –Ω–∞ –≤—Å–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        sudo -u postgres psql -c "
            GRANT CONNECT ON DATABASE template1 TO backup_user;
            ALTER USER backup_user CREATEDB;
        " 2>/dev/null
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ pg_hba.conf –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
        PG_VERSION=$(sudo -u postgres psql -t -c "SELECT version();" | grep -oP '\d+\.\d+' | head -1)
        PG_HBA="/etc/postgresql/$PG_VERSION/main/pg_hba.conf"
        
        if [ -f "$PG_HBA" ]; then
            # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
            sudo cp "$PG_HBA" "$PG_HBA.backup.$(date +%Y%m%d)"
            
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è backup_user
            if ! sudo grep -q "backup_user" "$PG_HBA"; then
                echo "local   all   backup_user   trust" | sudo tee -a "$PG_HBA"
                echo "host    all   backup_user   127.0.0.1/32   trust" | sudo tee -a "$PG_HBA"
                sudo systemctl reload postgresql
                echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ PostgreSQL –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
            fi
        fi
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ MySQL/MariaDB
setup_mysql() {
    echo "üê¨ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ MySQL/MariaDB..."
    
    if check_service mysql || check_service mariadb; then
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
        mysql -u root -e "
            CREATE USER IF NOT EXISTS 'backup_user'@'localhost' IDENTIFIED BY 'backup_password';
            GRANT SELECT, LOCK TABLES, SHOW VIEW, EVENT, TRIGGER, SHOW DATABASES ON *.* TO 'backup_user'@'localhost';
            FLUSH PRIVILEGES;
        " 2>/dev/null && echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å MySQL backup_user —Å–æ–∑–¥–∞–Ω" || echo "‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è MySQL"
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ .my.cnf –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        cat > ~/.my.cnf << EOF
[client]
user=backup_user
password=backup_password
host=localhost

[mysqldump]
user=backup_user
password=backup_password
host=localhost
single-transaction
routines
triggers
EOF
        chmod 600 ~/.my.cnf
        echo "‚úÖ –§–∞–π–ª .my.cnf —Å–æ–∑–¥–∞–Ω"
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ MongoDB
setup_mongodb() {
    echo "üçÉ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ MongoDB..."
    
    if check_service mongod; then
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –≤–∫–ª—é—á–µ–Ω–∞ –ª–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
        if mongo --eval "db.version()" >/dev/null 2>&1; then
            # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
            mongo admin --eval "
                db.createUser({
                    user: 'backup_user',
                    pwd: 'backup_password',
                    roles: [
                        { role: 'backup', db: 'admin' },
                        { role: 'readAnyDatabase', db: 'admin' }
                    ]
                })
            " 2>/dev/null && echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å MongoDB backup_user —Å–æ–∑–¥–∞–Ω" || echo "‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å MongoDB —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        else
            echo "‚úÖ MongoDB —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"
        fi
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Redis
setup_redis() {
    echo "üî¥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Redis..."
    
    if check_service redis-server || check_service redis; then
        # Redis –æ–±—ã—á–Ω–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
        echo "‚úÖ Redis –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
install_clients() {
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö..."
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
    sudo apt-get update -qq
    
    # PostgreSQL –∫–ª–∏–µ–Ω—Ç
    if ! command -v pg_dump &> /dev/null; then
        sudo apt-get install -y postgresql-client
        echo "‚úÖ PostgreSQL –∫–ª–∏–µ–Ω—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    # MySQL –∫–ª–∏–µ–Ω—Ç
    if ! command -v mysqldump &> /dev/null; then
        sudo apt-get install -y mysql-client
        echo "‚úÖ MySQL –∫–ª–∏–µ–Ω—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    # MongoDB –∫–ª–∏–µ–Ω—Ç
    if ! command -v mongodump &> /dev/null; then
        sudo apt-get install -y mongodb-clients
        echo "‚úÖ MongoDB –∫–ª–∏–µ–Ω—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    # Redis –∫–ª–∏–µ–Ω—Ç
    if ! command -v redis-cli &> /dev/null; then
        sudo apt-get install -y redis-tools
        echo "‚úÖ Redis –∫–ª–∏–µ–Ω—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker –¥–æ—Å—Ç—É–ø–∞
setup_docker() {
    echo "üê≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker –¥–æ—Å—Ç—É–ø–∞..."
    
    if command -v docker &> /dev/null; then
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
        sudo usermod -aG docker $USER
        echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É docker"
        echo "‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Å—Å–∏–∏: newgrp docker"
    else
        echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
create_backup_user() {
    echo "üë§ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è..."
    
    if ! id "backup" &>/dev/null; then
        sudo useradd -r -s /bin/bash -d /opt/db-backup -m backup
        sudo usermod -aG docker backup
        echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å backup —Å–æ–∑–¥–∞–Ω"
    else
        echo "‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å backup —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π
create_backup_directory() {
    echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π..."
    
    sudo mkdir -p /opt/db-backup/backups
    sudo chown -R backup:backup /opt/db-backup
    sudo chmod 755 /opt/db-backup
    echo "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è /opt/db-backup —Å–æ–∑–¥–∞–Ω–∞"
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
create_env_file() {
    echo "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    cat > /tmp/db-backup.env << EOF
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Google Drive
DRIVE_FOLDER_ID=your_drive_folder_id_here

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
BACKUP_DIR=/opt/db-backup/backups

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
# DB_USER=backup_user
# DB_PASSWORD=backup_password
EOF

    sudo mv /tmp/db-backup.env /opt/db-backup/.env
    sudo chown backup:backup /opt/db-backup/.env
    sudo chmod 600 /opt/db-backup/.env
    echo "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω –≤ /opt/db-backup/"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
test_connections() {
    echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö..."
    
    # PostgreSQL
    if command -v psql &> /dev/null; then
        if psql -h localhost -U backup_user -d template1 -c "\l" &>/dev/null; then
            echo "‚úÖ PostgreSQL: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ"
        else
            echo "‚ùå PostgreSQL: –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
        fi
    fi
    
    # MySQL
    if command -v mysql &> /dev/null; then
        if mysql -u backup_user -e "SHOW DATABASES;" &>/dev/null; then
            echo "‚úÖ MySQL: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ"
        else
            echo "‚ùå MySQL: –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
        fi
    fi
    
    # MongoDB
    if command -v mongo &> /dev/null; then
        if mongo --eval "db.version()" &>/dev/null; then
            echo "‚úÖ MongoDB: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ"
        else
            echo "‚ùå MongoDB: –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
        fi
    fi
    
    # Redis
    if command -v redis-cli &> /dev/null; then
        if redis-cli ping &>/dev/null; then
            echo "‚úÖ Redis: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ"
        else
            echo "‚ùå Redis: –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
        fi
    fi
    
    # Docker
    if command -v docker &> /dev/null; then
        if docker ps &>/dev/null; then
            echo "‚úÖ Docker: –¥–æ—Å—Ç—É–ø —É—Å–ø–µ—à–Ω–æ"
        else
            echo "‚ùå Docker: –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ (—Ç—Ä–µ–±—É–µ—Ç—Å—è newgrp docker)"
        fi
    fi
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üöÄ –ù–∞—á–∞–ª–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
    if [[ $EUID -ne 0 ]]; then
        echo "‚ùå –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –æ—Ç root –∏–ª–∏ —Å sudo"
        exit 1
    fi
    
    install_clients
    setup_postgresql
    setup_mysql
    setup_mongodb
    setup_redis
    setup_docker
    create_backup_user
    create_backup_directory
    create_env_file
    
    echo ""
    echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    echo ""
    echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Google Drive API –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ service-account-key.json –≤ /opt/db-backup/"
    echo "2. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ /opt/db-backup/.env –∏ —É–∫–∞–∂–∏—Ç–µ DRIVE_FOLDER_ID"
    echo "3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–∫—Ä–∏–ø—Ç backup_script.py –≤ /opt/db-backup/"
    echo "4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ systemd —Å–µ—Ä–≤–∏—Å"
    echo "5. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–µ—Å—Å–∏—é: newgrp docker"
    echo ""
    
    test_connections
}

# –ó–∞–ø—É—Å–∫
main "$@"
